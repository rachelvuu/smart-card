{"version":3,"sources":["Home.js","About.js","bios.js","NewCards.js","MyCards.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","react_default","a","createElement","className","App_Header","Link","to","alt","src","App_Footer","Component","AboutPage","About_Profile","person","bio","Profile","this","props","NewCardsPage","NewCards_AddCardForm","addCard","AddCardForm","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","smartMode","toggleSmartMode","bind","assertThisInitialized","toggleClassicMode","role","aria-label","type","onClick","NewCards_Form","setState","Form","NewCards_SmartModeForm","NewCards_ClassicModeForm","SmartModeForm","_this2","text","img","updateText","getData","uploadFile","event","target","value","onSubmit","accept","onChange","maxLength","rows","placeholder","_this3","files","length","reader","FileReader","file","onloadend","e","result","readAsDataURL","content","headers","Content-Type","Ocp-Apim-Subscription-Key","method","data","window","fetch","JSON","stringify","mode","then","response","console","log","catch","error","_this4","replace","getImageData","body","documents","language","id","parse","keyPhrases","forEach","phrase","front","back","ClassicModeForm","_this5","updateFront","updateBack","inputFront","inputBack","newCard","MyCardsPage","editMode","cardToEdit","cards","editCard","enableEdit","disableEdit","updateCard","deleteCard","card","index","editModal","MyCards_EditModal","num","key","MyCards_Tools","clearCards","map","i","MyCards_Card","EditModal","Modal","Dialog","Header","Title","Body","defaultValue","Footer","Button","bsStyle","Tools","editTools","Card","_this6","App","_Component","inherits","createClass","push","splice","BrowserRouter","Switch","Route","path","component","render","routerProps","NewCards","assign","MyCards","_Component2","apply","arguments","href","_Component3","Boolean","location","hostname","match","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3f669954.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Header, Footer } from './App';\nimport { Link } from 'react-router-dom'\n\nclass HomePage extends Component {\n  render () {\n    return (\n      <div className=\"background-image\">\n\n        <Header/>\n        <main>\n          <section className=\"why\">\n            <div className=\"jumbotron\">\n              <h2 className=\"display-4\">Smart Card</h2>\n                <p className=\"lead\">The \n                  <em> new </em>\n                  way to study.\n              </p>\n              <hr className=\"my-4\"></hr>\n              <div className=\"wrapper\">\n              <Link className=\"get-started-link\" to=\"/new-cards\">\n                <button className=\"btn  get-started-button\">Get Started</button>\n              </Link> \n              </div>\n            </div>\n            </section>\n            <section className=\"more-info\">\n                <h2 className=\"display-4\">\n                <img className=\"icon-front\" alt=\"Question mark icon\" \n                src=\"https://png.icons8.com/ios/100/000000/help-filled.png\">\n                </img>\n                What is Smart Card\n              </h2>\n              <p>\n                  Smart Card is a website that can be used to help you study.\n                  Just enter in your typed up notes and Smart Card will create \n                  <em> personalized</em> note cards!\n              </p>\n\n                <h2 className=\"display-4\">\n                <img className=\"icon-front\" alt=\"Person Icon\" \n                src=\"https://png.icons8.com/material-rounded/48/000000/user.png\">\n                </img>\n                Who Made Smart Card\n              </h2>\n              <p>\n                Smart Card was developed by Amelia Shull and Christopher Vitalis \n                in the Informatics major at the University of Washington. \n              </p>\n\n                <h2 className=\"display-4\">\n                <img className=\"icon-front\" alt=\"Piggy Bank Icon\" \n                src=\"https://png.icons8.com/ios/50/000000/money-box-filled.png\">\n                </img>\n                Is Smart Card Free?\n                </h2>\n              <p>\n                Yes! Smart Card is 100% free for everyone.\n              </p>\n            </section>\n        </main>\n        <Footer/>\n      </div>\n    )\n  }\n}\n\nexport default HomePage;\n","import React, { Component } from 'react';\nimport { Header, Footer } from './App';\nimport { chrisBio, ameliaBio } from './bios';\n\n\nclass AboutPage extends Component {\n  render () {\n    return (\n      <div  className=\"about-background\">\n      <head>\n        <title>Smart Card</title>\n      </head>\n        <Header/>\n        <div className=\"about-content\">\n          <h2 className=\"display-4\">About</h2>\n          <div className=\"all-bios\">\n            <Profile person=\"amelia\" bio={ameliaBio}/>\n            <Profile person=\"chris\" bio={chrisBio}/>\n          </div>\n        </div>\n        <Footer/>\n      </div>\n    )\n  }\n}\n\nclass Profile extends Component {\n  let\n  render(){\n    return (\n      <div className=\"profile\">\n        <div className=\"flip-pic\">\n          <div className=\"flip-pic-inner\">\n            <div className={this.props.person + \"Icon flip-pic-front\"}></div>\n            <div className=\"flip-pic-back\"></div>\n          </div>\n        </div>\n        <p className=\"bio-para\">{this.props.bio}</p>\n      </div>\n    )\n  }\n}\n\n\nexport default AboutPage;","export let chrisBio =  `Hey! My name is Christopher Vitalis and I am a first year\n student at the University of Washington’s Information School. I’m majoring \n in Informatics with a focus in Human-Computer Interaction. In my spare time I\n  enjoy finding new music and analyzing the different roles that non-traditional \n  sounds play within songs. I also enjoy bouldering and finding new boba \n  shops with my friends in search of the perfect tea.`;\n  \nexport let ameliaBio = `Hi! I'm Amelia. I am a junior in the Informatics program. \n  I spend most of my time doing homework or working. I also enjoy arts and crafts, painting\n  with watercolors is super fun and relaxing. I would like to be the next Bob Ross. I am also a head\n   teaching assistant for CSE 142. This is my 5th quarter doing it and I love it!`;","import React, { Component } from 'react';\nimport { Header, Footer } from './App';\nimport { Link } from 'react-router-dom'\nimport 'whatwg-fetch';\n\nclass NewCardsPage extends Component {\n  render () {\n    return(\n      <div>\n        <head>\n          <title>Smart Card</title>\n        </head>\n        <Header/>\n        <AddCardForm addCard={this.props.addCard}/>\n        <Footer/>\n      </div>\n    )\n  }\n}\n\nclass AddCardForm extends Component {\n  constructor() {\n    super();\n    this.state = {smartMode: true};\n    this.toggleSmartMode = this.toggleSmartMode.bind(this);\n    this.toggleClassicMode = this.toggleClassicMode.bind(this);\n  }\n\n  render() {\n    return(\n      <div className=\"form-group new-cards\">\n        <h2 className=\"display-4\">New Cards</h2>\n        <label>\n          Get started with Smart Card by typing or pasting your notes below. Next, hit submit to create\n          your cards. To view your cards click the 'View Cards' button. Smart Cards has two modes for \n          creating notecards. Toggle which mode you want below. <em>Smart mode</em> will chose which terms to\n          add into notecards for you. <em>Classic mode</em> will turn each individual entry into its own card.\n        </label>\n        <div className=\"btn-group\" role=\"group\" aria-label=\"Note card mode\">\n          <button type=\"button\" className=\"btn btn-sm btn-secondary active smart-mode\" onClick={this.toggleSmartMode}>Smart Mode</button>\n          <button type=\"button\" className=\"btn btn-sm btn-secondary classic-mode\" onClick={this.toggleClassicMode}>Classic Mode</button>\n        </div>\n        <Form smartMode={this.state.smartMode} addCard={this.props.addCard}></Form>\n      </div>\n    )\n  }\n\n  toggleSmartMode() {\n    this.setState({\n      smartMode: true\n    });\n  }\n\n  toggleClassicMode() {\n    this.setState({\n      smartMode: false\n    });\n  }\n}\n\nclass Form extends Component {\n  render() {\n    if (this.props.smartMode) {\n      return (<SmartModeForm addCard={this.props.addCard}/>)\n    } else {\n      return (<ClassicModeForm addCard={this.props.addCard}/>)\n    }\n  }\n}\n\nclass SmartModeForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      text: \"\",\n      img: \"\"\n    }\n    this.updateText = this.updateText.bind(this);\n    this.getData = this.getData.bind(this);\n    this.uploadFile = this.uploadFile.bind(this);\n  }\n  \n  updateText(event) {\n    let state = this.state;\n    state.text = event.target.value;\n    this.setState(state);\n  }\n\n  render() {\n    return (\n      <div className=\"text-input\">\n        <form onSubmit={this.uploadFile}>\n          <div className=\"form-group\">\n            <label>Upload a picture of your notes:</label>\n            <input type=\"file\" className=\"form-control-file\" accept=\"image/*\" onChange={this.uploadFile}/>\n          </div>\n        </form>\n        <textarea className=\"form-control input-card-text\" maxLength=\"5000\" rows=\"4\" onChange={this.updateText} value={this.state.text} placeholder=\"Your notes go here\"></textarea>\n        <div>\n          <button type=\"submit\" className=\"btn btn-p btn-sm submit-button\" onClick={this.getData}>Submit</button>\n          <Link to=\"/my-cards\" className=\"btn btn-secondary btn-sm my-cards-link view-button\">View Cards</Link>\n        </div>\n      </div>\n    )\n  }\n\n  uploadFile(event) {\n    if (event.target.files.length > 0) {\n      let reader = new FileReader();\n      let file = event.target.files[0];\n\n      let dataURL = \"\";\n      reader.onloadend = (e) => {\n        let state = this.state;\n        state.img = reader.result;\n        this.setState(state);\n      }\n      reader.readAsDataURL(file);\n    }\n  }\n\n  getImageData() {\n    let content = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Ocp-Apim-Subscription-Key\": \"e1835b4e4cd54a5ab4ccfae25cc8c37b\"\n      },\n      method: \"post\",\n      data: '{\"url\": ' + '\"' + this.state.img + '\"}'\n    };\n\n    let params = {\n      \"mode\": \"Handwritten\",\n    };\n\n    window.fetch(\"https://westcentralus.api.cognitive.microsoft.com/vision/v2.0/recognizeText?\" + JSON.stringify(params), content)\n      .then((response) => {\n        console.log(response);\n        return response.text();\n      })  /*\n      .then((response) => {\n        return JSON.parse(response);\n      })\n      .then((response) => {\n        response.documents[0].keyPhrases.forEach((phrase) => {\n          this.props.addCard({front: phrase, back: \"Back of card.\"});\n        });\n        this.setState({text: \"\"});\n      }) */\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n\n  getData() {\n    let text = this.state.text.replace(/\"/g, '\\'');\n\n    if (this.state.img !== \"\") {\n      text += \" \" + this.getImageData();\n    }\n\n    let content = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Ocp-Apim-Subscription-Key\": \"2796f530ee7443179bf560163b62a158\"\n      },\n      method: \"post\",\n      body: \n        JSON.stringify({\n          documents: [\n            {\n              language: \"en\",\n              id: \"1\",\n              text: text\n            }\n          ]\n        })\n    };\n\n    window.fetch(\"https://westus.api.cognitive.microsoft.com/text/analytics/v2.0/keyPhrases\", content)\n      .then((response) => {\n        return response.text();\n      })\n      .then((response) => {\n        return JSON.parse(response);\n      })\n      .then((response) => {\n        response.documents[0].keyPhrases.forEach((phrase) => {\n          this.props.addCard({front: phrase, back: \"Back of card.\"});\n        });\n        this.setState({text: \"\"});\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n}\n\nclass ClassicModeForm extends Component {\n  constructor() {\n    super();\n    this.addCard = this.addCard.bind(this);\n    this.updateFront = this.updateFront.bind(this);\n    this.updateBack = this.updateBack.bind(this);\n\n    this.state = {\n      front: '',\n      back: ''\n    };\n  }\n\n  updateFront(event) {\n    let state = this.state;\n    state.front = event.target.value;\n    this.setState(state);\n  }\n\n  updateBack(event) {\n    let state = this.state;\n    state.back = event.target.value;\n    this.setState(state);\n  }\n\n  render() {\n    let inputFront = (<textarea className=\"form-control input-card-front\" maxLength=\"5000\" rows=\"4\" placeholder=\"Front of card\" onChange={this.updateFront} value={this.state.front}></textarea>);\n    let inputBack = (<textarea className=\"form-control input-card-back\" maxLength=\"5000\" rows=\"4\" placeholder=\"Back of card\" onChange={this.updateBack} value={this.state.back}></textarea>);\n    return(\n      <div className=\"text-input\">\n        {inputFront}\n        {inputBack}\n        <div>\n          <button className=\"btn btn-p btn-sm submit-button\" onClick={this.addCard}>Submit</button>\n          <Link to=\"/my-cards\" className=\"btn btn-secondary btn-sm my-cards-link view-button\">View Cards</Link>\n        </div>\n      </div>\n    )\n  }\n\n  addCard() {\n    let newCard = {\n      front: this.state.front,\n      back: this.state.back\n    }\n    this.props.addCard(newCard);\n    this.setState({\n      front: '',\n      back: ''\n    });\n  }\n}\n\n\n\n\nexport default NewCardsPage;\n","import React, { Component } from 'react';\nimport { Header, Footer } from './App';\nimport { Link } from 'react-router-dom';\nimport { Modal, Button } from 'react-bootstrap';\n\n\nclass MyCardsPage extends Component {\n    constructor(props) {\n        super();\n        this.state = {\n            editMode: false,\n            cardToEdit: null,\n            cards: props.cards\n        }\n        this.editCard = this.editCard.bind(this);\n        this.enableEdit = this.enableEdit.bind(this);\n        this.disableEdit = this.disableEdit.bind(this);\n        this.updateCard = this.updateCard.bind(this);\n        this.deleteCard = this.deleteCard.bind(this);\n    }\n\n    updateCard(card) {\n        this.props.updateCard(card);\n\n        this.setState({\n            editMode: true,\n            cardToEdit: null,\n        });\n    }\n\n    enableEdit() {\n        this.setState({\n            editMode: true,\n            cardToEdit: null\n        });\n    }\n\n    disableEdit() {\n        this.setState({\n            editMode: false,\n            cardToEdit: null\n        });\n    }\n\n    editCard(card) {\n        if (this.state.editMode) {\n            let editMode = this.state.editMode;\n            this.setState({\n                editMode: editMode,\n                cardToEdit: card\n            });\n        }\n    }\n\n    deleteCard(index) {\n        this.setState({\n            editMode: true,\n            cardToEdit: null\n        });\n        this.props.deleteCard(index);\n    }\n\n    render() {\n        let editModal = <div/>;\n        if (this.state.cardToEdit != null) {\n            editModal = <EditModal num={this.state.cardToEdit.key} front={this.state.cardToEdit.front} back={this.state.cardToEdit.back} updateCard={this.updateCard} deleteCard={this.deleteCard}></EditModal>\n        }\n        return(\n            <div>\n                <head>\n                    <title>Smart Card</title>\n                </head>\n                {editModal}\n                <Header/>\n                <div className=\"form-group my-cards\">\n                    <h2 className=\"display-4 my-card-title\">My Cards</h2>\n                    <Tools clearCards={this.props.clearCards} enableEdit={this.enableEdit} disableEdit={this.disableEdit}/>\n                    <div className=\"card-container\">\n                        {this.props.cards.map((card, i) => {\n                            return <Card key={i} num={i} card={card} editCard={this.editCard}/>\n                        })}\n                    </div>\n                </div>\n                <Footer/>\n            </div>\n        )\n    }\n}\n\nclass EditModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            front: props.front,\n            back: props.back,\n            key: props.num\n        }\n        this.updateBack = this.updateBack.bind(this);\n        this.updateFront = this.updateFront.bind(this);\n        this.updateCard = this.updateCard.bind(this);\n        this.deleteCard = this.deleteCard.bind(this);\n    }\n\n    render() {\n        return (\n            <div className=\"static-modal\">\n            <Modal.Dialog>\n                <Modal.Header>\n                    <Modal.Title>Edit Card</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                    <textarea className=\"form-control input-card-front\" maxLength=\"5000\" rows=\"4\" defaultValue={this.props.front} onChange={this.updateFront}></textarea>\n                    <textarea className=\"form-control input-card-back\" maxLength=\"5000\" rows=\"4\" defaultValue={this.props.back} onChange={this.updateBack}></textarea>\n                </Modal.Body>\n\n                <Modal.Footer>\n                    <Button bsStyle=\"danger\" onClick={this.deleteCard}>Delete</Button>\n                    <Button bsStyle=\"primary\" onClick={this.updateCard}>Save changes</Button>\n                </Modal.Footer>\n            </Modal.Dialog>\n            </div>\n        );\n    }\n\n    updateFront(event) {\n        this.setState({\n            front: event.target.value,\n            back: this.state.back\n        });\n    }\n\n    updateBack(event) {\n        this.setState({\n            front: this.state.front,\n            back: event.target.value\n        })\n    }\n\n    deleteCard(){\n        this.props.deleteCard(this.state.key);\n    }\n\n    updateCard() {\n        let card = {\n            front: this.state.front,\n            back: this.state.back,\n            key: this.state.key\n        }\n        this.props.updateCard(card);\n    }\n}\n\nclass Tools extends Component {\n    constructor() {\n        super();\n        this.state = {\n            editTools: false\n        }\n        this.enableEdit = this.enableEdit.bind(this);\n        this.disableEdit = this.disableEdit.bind(this);\n    }\n\n    enableEdit() {\n        this.setState({\n            editTools: true\n        });\n        this.props.enableEdit();\n    }\n\n    disableEdit() {\n        this.setState({\n            editTools: false\n        });\n        this.props.disableEdit();\n    }\n\n    render() {\n        if (!this.state.editTools) { // regular mode\n            return(\n                <div className=\"tool-bar\">\n                    <label className=\"my-cards-info\">Your personalized notecards are displayed below.\n                        You can hover over or click them to view the other side of the card.\n                        The edit button lets you change or delete either side of the card!\n                    </label>\n                    <div className=\"tools\">\n                        <Link to=\"/new-cards\">\n                            <button className=\"btn btn-p btn-sm tool-btn\">Add Cards</button>\n                        </Link>\n                        <button className=\"btn btn-p btn-sm tool-btn\" onClick={this.props.clearCards}> Clear All</button>\n                        <button className=\"btn btn-p btn-sm tool-btn\" onClick={this.enableEdit}>Edit</button>\n                    </div>\n                </div>\n            )\n        } else { // edit mode\n            return (\n                <div className=\"tool-bar\">\n                    <label>\n                        Click on a card to edit or delete it.\n                    </label>\n                    <div className=\"tools\">\n                        <button className=\"btn btn-p btn-sm tool-btn\" onClick={this.disableEdit}>Done Editing</button>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nclass Card extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            front: props.card.front,\n            back: props.card.back,\n            key: props.num\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"flip-card\" onClick={() => this.props.editCard(this.state)}>\n                <div className=\"flip-card-inner\">\n                    <div className=\"flip-card-front\">\n                        <p>{this.props.card.front}</p>\n                    </div>\n                    <div className=\"flip-card-back\">\n                        <p>{this.props.card.back}</p>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\n\nexport default MyCardsPage;","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Link, Switch} from 'react-router-dom'\nimport HomePage from './Home';\nimport AboutPage from './About';\nimport NewCardsPage from './NewCards';\nimport MyCardsPage from './MyCards';\n\n\n/* An array of card objects\ncards: [\n  {\n    front: \"front of card\",\n    back: \"back of card\"\n  }\n]\n*/\nexport class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      cards: [\n        {\n          front: \"Example Card\",\n          back: \"Back of example card\"\n        },\n        {\n          front: \"We worked really hard on this project\",\n          back: \"I hope you can tell\"\n        }\n      ]\n    };\n    this.addCard = this.addCard.bind(this);\n    this.clearCards = this.clearCards.bind(this);\n    this.updateCard = this.updateCard.bind(this);\n    this.deleteCard = this.deleteCard.bind(this);\n  }\n\n  addCard(newCard) {\n    let cards = this.state.cards;\n    cards.push(newCard);\n    this.setState({\n      cards: cards\n    });\n  }\n\n  updateCard(card) {\n    let cards = this.state.cards;\n    cards[card.key] = {\n      front: card.front,\n      back: card.back\n    }\n    this.setState({\n      cards: cards\n    });\n  }\n\n  clearCards() {\n    this.setState({\n      cards: []\n    })\n  }\n\n  deleteCard(index) {\n    let cards = this.state.cards;\n    cards.splice(index, 1);\n    this.setState({\n      cards: cards\n    });\n  }\n\n  render() {\n    return(\n     \n      <BrowserRouter>\n      \n        <Switch>\n          {/* if currentUrl == '/home', render <HomePage> */}\n          <Route path=\"/home\" component={HomePage}/>\n          {/* if currentUrl == '/about', render <AboutPage> */}\n          <Route path='/about' component={AboutPage} />\n\n          {/* if currentUrl == '/new-cards', render <NewCardsPage> */}\n          <Route path='/new-cards' render={(routerProps) => (\n            <NewCardsPage {...routerProps} addCard={this.addCard}/>\n          )}/>\n\n          \n          {/* if currentUrl == '/my-caards', render <MyCardsPage> */}\n          <Route path='/my-cards' render={(routerProps) => (\n            <MyCardsPage {...routerProps} cards={this.state.cards} clearCards={this.clearCards} updateCard={this.updateCard} deleteCard={this.deleteCard}/>\n          )}/>\n          <Route path=\"*\" component={HomePage}/>\n        </Switch>\n\n      </BrowserRouter>\n      \n    );\n  }\n}\n\nexport class Footer extends Component {\n  render() {\n    return (\n      <footer>If you have any questions please contact\n        <a href=\"mailto:ashull@uw.edu\"> Amelia Shull</a> or\n        <a href=\"mailto:cvitalis@uw.edu\"> Christopher Vitalis. </a>\n        Key phrases in notecards are from Microsoft's Text Analytics API.\n      </footer>\n    )\n  }\n}\n\nexport class Header extends Component {\n  render() {\n    return (\n        <header className=\"menu d-flex justify-content-between align-items-center\">\n        <Link className=\"home-link\" to=\"/home\">\n          <h1 className=\"display-4 title\">Smart Card</h1>\n          <img className=\"icon\" alt=\"Graphic of a notepad icon\" src=\"https://img.icons8.com/metro/52/b7a57a/note.png\"></img>\n        </Link>\n        <nav>\n          <ul className=\"nav justify-content-end\">\n            <li className=\"nav-item\">\n              <Link className=\"nav-link new-cards-link-nav\" to=\"/new-cards\">New Cards</Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link className=\"nav-link active my-cards-link\" to=\"/my-cards\">My Cards</Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link className=\"nav-link about-link\" to=\"/about\">About</Link>\n            </li>\n          </ul>\n        </nav>\n      </header>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}